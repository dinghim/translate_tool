Lua 是一个扩展式程序设计语言，它被设计成支持通用的过程式编程，并有相关数据描述的设施。 
Lua 也能对面向对象编程，函数式编程，数据驱动式编程提供很好的支持。
它可以作为一个强大、轻量的脚本语言，供任何需要的程序使用。 
Lua 以一个用 clean C 写成的库形式提供。（所谓 Clean C ，指的 ANSI C 和 C++ 中共通的一个子集） 
作为一个扩展式语言，Lua 没有 "main" 程序的概念：它只能 嵌入 一个宿主程序中工作，这个宿主程序被称作 embedding program 或简称为 host 。
宿主程序可以通过调用函数执行一小段 Lua 代码，可以读写 Lua 变量，可以注入 C 函数让 Lua 代码调用。这些扩展的 C 函数，可以大大的扩展了 Lua 可以处理事务的领域，这样就可以订制出各种语言，而它们共享一个统一的句法格式的框架。 
Lua 的官方发布版就包含了一个叫做 lua 的简单的宿主程序，它用 Lua 库提供了一个保证独立的 Lua 解释器。 
Lua 是一个自由软件，它的使用许可决定了对它的使用过程一般没有任何保证。这份手册中描述的东西的实现，可以在 Lua 的官方网站 www.lua.org 找到， 跟其它的许多参考手册一样，这份文档有些地方比较枯燥。
关于 Lua 的设计想法的探讨，可以看看 Lua 网站上提供的技术论文。有关用 Lua 编程的细节介绍，可以读一下 Roberto 的书，Programming in Lua (Second Edition) 。 
